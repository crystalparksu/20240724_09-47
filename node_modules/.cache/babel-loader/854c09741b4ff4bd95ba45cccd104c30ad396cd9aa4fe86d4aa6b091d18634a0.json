{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\frontend_rock\\\\src\\\\pages\\\\Login\\\\FindLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n// import '../../common/css/FindIdPassword.css';\n\n//ID 찾기\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FindLogin() {\n  _s();\n  const navigate = useNavigate();\n  const [findIdForm, setFindIdForm] = useState({\n    memName: '',\n    memEmail: ''\n  });\n\n  // const [username, setUsername] = useState(\"\");\n  const [message, setMessage] = useState('');\n\n  // 아이디 찾기 폼 관련\n  const handleFindIdChange = e => {\n    setFindIdForm({\n      ...findIdForm,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // 아이디 찾기 로직\n  const handleFindId = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('/auth/find-id', findIdForm);\n      alert(`아이디: ${response.data}`);\n    } catch (error) {\n      alert('회원정보를 찾지 못했습니다.');\n    }\n  };\n\n  //HTML\n  return /*#__PURE__*/_jsxDEV(EmailLoginContainer, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleFindId,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"memName\",\n        children: \"\\uC774\\uB984\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EmailLoginInput, {\n        type: \"text\",\n        id: \"memName\",\n        name: \"memName\",\n        value: findIdForm.memName,\n        placeholder: \"\\uC774\\uB984\",\n        required: true,\n        onChange: handleFindIdChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"memEmail\",\n        children: \"\\uC774\\uBA54\\uC77C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"memEmail\",\n        name: \"memEmail\",\n        className: \"commonpage\",\n        value: findIdForm.memEmail,\n        onChange: handleFindIdChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: \"loginbutton\",\n        children: \"\\uC544\\uC774\\uB514 \\uCC3E\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(FindLogin, \"T+QIMDn2rhinRESnToQ4IiPNO2U=\", false, function () {\n  return [useNavigate];\n});\n_c = FindLogin;\nexport default FindLogin;\nvar _c;\n$RefreshReg$(_c, \"FindLogin\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","FindLogin","_s","navigate","findIdForm","setFindIdForm","memName","memEmail","message","setMessage","handleFindIdChange","e","target","name","value","handleFindId","preventDefault","response","post","alert","data","error","EmailLoginContainer","children","Form","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","EmailLoginInput","type","id","placeholder","required","onChange","className","Button","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/frontend_rock/src/pages/Login/FindLogin.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n// import '../../common/css/FindIdPassword.css';\r\n\r\n\r\n\r\n//ID 찾기\r\nfunction FindLogin() {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [findIdForm, setFindIdForm] = useState({\r\n        memName: '',\r\n        memEmail: ''\r\n    });\r\n\r\n    // const [username, setUsername] = useState(\"\");\r\n    const [message, setMessage] = useState('');\r\n\r\n    // 아이디 찾기 폼 관련\r\n    const handleFindIdChange = (e) => {\r\n        setFindIdForm({ ...findIdForm, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    // 아이디 찾기 로직\r\n    const handleFindId = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const response = await axios.post('/auth/find-id', findIdForm);\r\n            alert(`아이디: ${response.data}`);\r\n        } catch (error) {\r\n            alert('회원정보를 찾지 못했습니다.');\r\n        }\r\n    };\r\n\r\n\r\n    //HTML\r\n    return(\r\n        <EmailLoginContainer>\r\n\r\n            <Form onSubmit={handleFindId}>\r\n\r\n                <label htmlFor=\"memName\">이름</label>\r\n                <EmailLoginInput\r\n                    type=\"text\"\r\n                    id=\"memName\"\r\n                    name=\"memName\"\r\n                    value={findIdForm.memName}\r\n                    placeholder=\"이름\"\r\n                    required\r\n                    onChange={handleFindIdChange}\r\n                />\r\n\r\n                <label htmlFor=\"memEmail\">이메일</label>\r\n                <input\r\n                    type=\"email\"\r\n                    id=\"memEmail\"\r\n                    name=\"memEmail\"\r\n                    className='commonpage'\r\n                    value={findIdForm.memEmail}\r\n                    onChange={handleFindIdChange}\r\n                />\r\n\r\n                <Button type=\"submit\"\r\n                        className='loginbutton'>아이디 찾기\r\n                </Button>\r\n            </Form>\r\n\r\n        </EmailLoginContainer>\r\n    );\r\n}\r\n\r\nexport default FindLogin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}