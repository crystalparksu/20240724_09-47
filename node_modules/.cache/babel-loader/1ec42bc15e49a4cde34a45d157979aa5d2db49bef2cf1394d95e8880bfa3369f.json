{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\frontend_rock\\\\src\\\\pages\\\\Notice\\\\NoticeWrite.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from 'axios';\n// import './css/NoticeWrite.css';\nimport styled from \"styled-components\";\n\n//공지사항 글쓰기\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NoticeWrite() {\n  _s();\n  //변수\n  const [boardTitle, setBoardTitle] = useState('');\n  const [boardContent, setBoardContent] = useState('');\n  const [fileInputs, setFileInputs] = useState([0]); // 파일 입력 상태\n  const [files, setFiles] = useState([]);\n  const navigate = useNavigate();\n\n  //핸들러\n  const handleTitleChange = e => {\n    setBoardTitle(e.target.value);\n  };\n  const handleContentChange = e => {\n    setBoardContent(e.target.value);\n  };\n  const handleFileChange = (index, e) => {\n    const newFiles = [...files];\n    newFiles[index] = e.target.files[0];\n    setFiles(newFiles);\n  };\n  const addFileInput = () => {\n    if (fileInputs.length >= 5) {\n      alert(\"최대 5개의 파일만 업로드할 수 있습니다.\");\n      return;\n    }\n    setFileInputs([...fileInputs, fileInputs.length]);\n  };\n  const removeFileInput = index => {\n    const newFileInputs = fileInputs.filter((_, i) => i !== index);\n    const newFiles = files.filter((_, i) => i !== index);\n    setFileInputs(newFileInputs);\n    setFiles(newFiles);\n  };\n\n  //handleSubmit\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = {\n      boardTitle: boardTitle,\n      boardContent: boardContent\n    };\n\n    //비동기\n    try {\n      const response = await axios.post('/admin/boardWrite', data);\n      console.log('게시글 작성 성공:', response);\n      const boardId = response.data.boardId; // 서버에서 반환한 게시글 ID\n\n      if (files.length > 0) {\n        await uploadFiles(boardId, files);\n      } else {\n        navigate('/admin/Notice');\n      }\n    } catch (error) {\n      console.error('게시글 작성 실패:', error);\n      alert('게시글 작성에 실패했습니다.');\n    }\n  };\n\n  //uploadFiles\n  const uploadFiles = async (boardId, files) => {\n    const formData = new FormData();\n    files.forEach(file => {\n      if (file) {\n        formData.append('files', file); // 'files'는 서버에서 기대하는 파라미터 이름\n      }\n    });\n    try {\n      await axios.post(`/admin/boardUpload/${boardId}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('파일 업로드 성공');\n      navigate('/admin/Notice');\n    } catch (error) {\n      console.error('파일 업로드 실패:', error.response ? error.response.data : error.message);\n      alert('파일 업로드에 실패했습니다. 게시글은 작성되었습니다.');\n      navigate('/admin/Notice');\n    }\n  };\n\n  //HTML\n  return /*#__PURE__*/_jsxDEV(Wrap, {\n    children: /*#__PURE__*/_jsxDEV(FromNoticeWrap, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        className: \"name\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/user/notice/`,\n          children: \"\\uC790\\uC720\\uAC8C\\uC2DC\\uD310\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormWrite, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(InputTextSizeWTypeL, {\n          children: [/*#__PURE__*/_jsxDEV(InputWrite, {\n            type: \"text\",\n            id: \"title\",\n            name: \"title\",\n            required: true,\n            placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n            value: boardTitle,\n            onChange: handleTitleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputDate, {\n            type: \"date\",\n            id: \"date\",\n            name: \"date\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextWrite, {\n          name: \"content\",\n          id: \"content\",\n          cols: \"auto\",\n          rows: \"auto\",\n          required: true,\n          placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n          value: boardContent,\n          onChange: handleContentChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n_s(NoticeWrite, \"b1rIFnKRoRjHCQ7RROVHhY3ii4I=\", false, function () {\n  return [useNavigate];\n});\n_c = NoticeWrite;\nexport default NoticeWrite;\n\n// style\n//전체\nconst Wrap = styled.div`\n    width: 100%;\n    height: 100vh;\n    position: relative;\n    margin: 0 auto;\n    //padding: 40px 40px;\n    //background: rgb(255,255,255);\n    background: #fff;\n    display: inline-block;\n`;\n//감싸는 전체\n_c2 = Wrap;\nconst FromNoticeWrap = styled.div`\n    width: 1024px;\n    position: relative;\n    margin: 0 auto;\n    background: #fff;\n    margin-bottom: 48px;\n    padding-top: 40px;\n`;\n//제목감싸는 박스\n_c3 = FromNoticeWrap;\nconst Header = styled.div`\n    width: 1024px;\n    margin: 0 auto;\n    //background: red;\n    font-family: 'SUIT-Regular' !important;\n    color: rgb(51, 61, 75);\n    font-size: 36px;\n    font-weight: 800;\n    text-align: left;\n`;\n//제목+ 등록 폼 감싸는 박스\n_c4 = Header;\nconst InputTextSizeWTypeL = styled.div`\n  box-sizing: border-box;\n  vertical-align: middle;\n  height: 48px;\n  display: flex;\n  width: 1024px;\n  margin-top: 1px;\n  text-align: left;\n`;\n\n//등록폼\n_c5 = InputTextSizeWTypeL;\nconst InputDate = styled.input`\n    width: 220px;\n    height: 40px;\n    //margin-left: 40px;\n    border: none;\n    outline: none;\n    display: flex;\n    justify-content: right;\n    float: right;\n    \n    \n    /*폰트 디자인*/\n    padding: 15px 5px;\n    text-indent: 10px;\n    font-size: 13px;\n    font-weight: 500;\n    background-color: #fff;\n    -webkit-font-smoothing: antialiased;\n    text-align: left;\n\n    /*폼 디자인*/\n    border: 1px solid #ccc;\n`;\n\n//제목 폼\n_c6 = InputDate;\nconst InputWrite = styled.input`\n    /*전체 구도*/\n    width: 800px;\n    height: 40px;\n    //margin: 0 auto;\n    border: none;\n    outline: none;\n    display: flex;\n    justify-content: center;\n    \n    /*폰트 디자인*/\n    padding: 15px 5px;\n    text-indent: 10px;\n    font-size: 13px;\n    font-weight: 500;\n    background-color: #fff;\n    -webkit-font-smoothing: antialiased;\n    text-align: left;\n\n    /*폼 디자인*/\n    border: 1px solid #ccc;\n`;\n\n//\n_c7 = InputWrite;\nconst TextWrite = styled.textarea`\n    width: 1024px;\n    height: 500px;\n    resize: none;\n    border: none;\n    outline: none;\n    border: 1px solid #ccc;\n    margin-top: 20px;\n    \n    /*폰트 디자인*/\n    text-indent: 10px;\n    font-size: 13px;\n    font-weight: 500;\n    background-color: #fff;\n    -webkit-font-smoothing: antialiased;\n    text-align: left;\n    padding: 15px 5px;\n`;\n_c8 = TextWrite;\nconst FormWrite = styled.form`\n    width: 1024px;\n    /* border: 1px solid red; */\n    display: flex;\n    flex-direction: column;\n`;\n_c9 = FormWrite;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"NoticeWrite\");\n$RefreshReg$(_c2, \"Wrap\");\n$RefreshReg$(_c3, \"FromNoticeWrap\");\n$RefreshReg$(_c4, \"Header\");\n$RefreshReg$(_c5, \"InputTextSizeWTypeL\");\n$RefreshReg$(_c6, \"InputDate\");\n$RefreshReg$(_c7, \"InputWrite\");\n$RefreshReg$(_c8, \"TextWrite\");\n$RefreshReg$(_c9, \"FormWrite\");","map":{"version":3,"names":["React","useState","Link","useNavigate","axios","styled","jsxDEV","_jsxDEV","NoticeWrite","_s","boardTitle","setBoardTitle","boardContent","setBoardContent","fileInputs","setFileInputs","files","setFiles","navigate","handleTitleChange","e","target","value","handleContentChange","handleFileChange","index","newFiles","addFileInput","length","alert","removeFileInput","newFileInputs","filter","_","i","handleSubmit","preventDefault","data","response","post","console","log","boardId","uploadFiles","error","formData","FormData","forEach","file","append","headers","message","Wrap","children","FromNoticeWrap","Header","className","to","fileName","_jsxFileName","lineNumber","columnNumber","FormWrite","onSubmit","InputTextSizeWTypeL","InputWrite","type","id","name","required","placeholder","onChange","InputDate","TextWrite","cols","rows","_c","div","_c2","_c3","_c4","_c5","input","_c6","_c7","textarea","_c8","form","_c9","$RefreshReg$"],"sources":["C:/Users/Administrator/frontend_rock/src/pages/Notice/NoticeWrite.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n// import './css/NoticeWrite.css';\r\nimport styled from \"styled-components\";\r\n\r\n\r\n\r\n//공지사항 글쓰기\r\nfunction NoticeWrite() {\r\n\r\n    //변수\r\n    const [boardTitle, setBoardTitle] = useState('');\r\n    const [boardContent, setBoardContent] = useState('');\r\n    const [fileInputs, setFileInputs] = useState([0]); // 파일 입력 상태\r\n    const [files, setFiles] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    //핸들러\r\n    const handleTitleChange = (e) => {\r\n        setBoardTitle(e.target.value);\r\n    };\r\n\r\n    const handleContentChange = (e) => {\r\n        setBoardContent(e.target.value);\r\n    };\r\n\r\n    const handleFileChange = (index, e) => {\r\n        const newFiles = [...files];\r\n        newFiles[index] = e.target.files[0];\r\n        setFiles(newFiles);\r\n    };\r\n\r\n    const addFileInput = () => {\r\n        if (fileInputs.length >= 5) {\r\n            alert(\"최대 5개의 파일만 업로드할 수 있습니다.\");\r\n            return;\r\n        }\r\n        setFileInputs([...fileInputs, fileInputs.length]);\r\n    };\r\n\r\n    const removeFileInput = (index) => {\r\n        const newFileInputs = fileInputs.filter((_, i) => i !== index);\r\n        const newFiles = files.filter((_, i) => i !== index);\r\n        setFileInputs(newFileInputs);\r\n        setFiles(newFiles);\r\n    };\r\n\r\n\r\n    //handleSubmit\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            boardTitle: boardTitle, boardContent: boardContent,\r\n        };\r\n\r\n        //비동기\r\n        try {\r\n            const response = await axios.post('/admin/boardWrite', data);\r\n            console.log('게시글 작성 성공:', response);\r\n            const boardId = response.data.boardId; // 서버에서 반환한 게시글 ID\r\n\r\n            if (files.length > 0) {\r\n                await uploadFiles(boardId, files);\r\n            } else {\r\n                navigate('/admin/Notice');\r\n            }\r\n        } catch (error) {\r\n            console.error('게시글 작성 실패:', error);\r\n            alert('게시글 작성에 실패했습니다.');\r\n        }\r\n    };\r\n\r\n\r\n    //uploadFiles\r\n    const uploadFiles = async (boardId, files) => {\r\n        const formData = new FormData();\r\n        files.forEach((file) => {\r\n            if (file) {\r\n                formData.append('files', file); // 'files'는 서버에서 기대하는 파라미터 이름\r\n            }\r\n        });\r\n\r\n        try {\r\n            await axios.post(`/admin/boardUpload/${boardId}`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            });\r\n            console.log('파일 업로드 성공');\r\n            navigate('/admin/Notice');\r\n        } catch (error) {\r\n            console.error('파일 업로드 실패:', error.response ? error.response.data : error.message);\r\n            alert('파일 업로드에 실패했습니다. 게시글은 작성되었습니다.');\r\n            navigate('/admin/Notice');\r\n        }\r\n    };\r\n\r\n\r\n\r\n    //HTML\r\n    return(\r\n\r\n        <Wrap>\r\n            <FromNoticeWrap>\r\n                <Header className=\"name\">\r\n                    <Link to={`/user/notice/`}>\r\n                        자유게시판\r\n                    </Link>\r\n                </Header>\r\n\r\n                {/*폼 기능*/}\r\n                <FormWrite onSubmit={handleSubmit}>\r\n\r\n                    <InputTextSizeWTypeL>\r\n                        {/* 제목 폼 */}\r\n                        <InputWrite\r\n                            type=\"text\"\r\n                            id=\"title\"\r\n                            name=\"title\"\r\n                            required\r\n                            placeholder=\"제목을 입력하세요\"\r\n                            value={boardTitle}\r\n                            onChange={handleTitleChange}\r\n                        />\r\n                    {/* 등록일 폼 */}\r\n                    <InputDate\r\n                        type=\"date\"\r\n                        id=\"date\"\r\n                        name=\"date\"\r\n                        required\r\n                    />\r\n                    </InputTextSizeWTypeL>\r\n\r\n\r\n                    {/* 내용 폼 */}\r\n                    <TextWrite\r\n                        name=\"content\"\r\n                        id=\"content\"\r\n                        cols=\"auto\"\r\n                        rows=\"auto\"\r\n                        required\r\n                        placeholder=\"내용을 입력하세요\"\r\n                        value={boardContent}\r\n                        onChange={handleContentChange}\r\n                    ></TextWrite>\r\n\r\n\r\n                    {/* 첨부파일 버튼 */}\r\n                    {/*{fileInputs.map((input, index) => (<div className=\"FileUpload\" key={index}>*/}\r\n                    {/*        <input*/}\r\n                    {/*            type=\"file\"*/}\r\n                    {/*            id={`file_${index}`}*/}\r\n                    {/*            name={`file_${index}`}*/}\r\n                    {/*            onChange={(e) => handleFileChange(index, e)}*/}\r\n                    {/*        />*/}\r\n                    {/*        <button type=\"button\" onClick={() => removeFileInput(index)}>삭제</button>*/}\r\n                    {/*    </div>))}*/}\r\n\r\n\r\n                    {/* 추가 파일 업로드 버튼 */}\r\n                    {/*<div className=\"AddFileUpload\">*/}\r\n                    {/*    <button type=\"button\" onClick={addFileInput}>파일 추가</button>*/}\r\n                    {/*</div>*/}\r\n\r\n\r\n                    {/* 글쓰기 버튼 */}\r\n                    {/*<div className=\"WriteSubmit\">*/}\r\n                    {/*    <input type=\"submit\" value=\"글쓰기\" className=\"submit\"/>*/}\r\n                    {/*</div>*/}\r\n\r\n                </FormWrite>\r\n            </FromNoticeWrap>\r\n       </Wrap>\r\n    );\r\n}\r\nexport default NoticeWrite;\r\n\r\n\r\n// style\r\n//전체\r\nconst Wrap = styled.div`\r\n    width: 100%;\r\n    height: 100vh;\r\n    position: relative;\r\n    margin: 0 auto;\r\n    //padding: 40px 40px;\r\n    //background: rgb(255,255,255);\r\n    background: #fff;\r\n    display: inline-block;\r\n`;\r\n//감싸는 전체\r\nconst FromNoticeWrap = styled.div`\r\n    width: 1024px;\r\n    position: relative;\r\n    margin: 0 auto;\r\n    background: #fff;\r\n    margin-bottom: 48px;\r\n    padding-top: 40px;\r\n`;\r\n//제목감싸는 박스\r\nconst Header = styled.div`\r\n    width: 1024px;\r\n    margin: 0 auto;\r\n    //background: red;\r\n    font-family: 'SUIT-Regular' !important;\r\n    color: rgb(51, 61, 75);\r\n    font-size: 36px;\r\n    font-weight: 800;\r\n    text-align: left;\r\n`;\r\n//제목+ 등록 폼 감싸는 박스\r\nconst InputTextSizeWTypeL = styled.div`\r\n  box-sizing: border-box;\r\n  vertical-align: middle;\r\n  height: 48px;\r\n  display: flex;\r\n  width: 1024px;\r\n  margin-top: 1px;\r\n  text-align: left;\r\n`;\r\n\r\n//등록폼\r\nconst InputDate = styled.input`\r\n    width: 220px;\r\n    height: 40px;\r\n    //margin-left: 40px;\r\n    border: none;\r\n    outline: none;\r\n    display: flex;\r\n    justify-content: right;\r\n    float: right;\r\n    \r\n    \r\n    /*폰트 디자인*/\r\n    padding: 15px 5px;\r\n    text-indent: 10px;\r\n    font-size: 13px;\r\n    font-weight: 500;\r\n    background-color: #fff;\r\n    -webkit-font-smoothing: antialiased;\r\n    text-align: left;\r\n\r\n    /*폼 디자인*/\r\n    border: 1px solid #ccc;\r\n`;\r\n\r\n//제목 폼\r\nconst InputWrite = styled.input`\r\n    /*전체 구도*/\r\n    width: 800px;\r\n    height: 40px;\r\n    //margin: 0 auto;\r\n    border: none;\r\n    outline: none;\r\n    display: flex;\r\n    justify-content: center;\r\n    \r\n    /*폰트 디자인*/\r\n    padding: 15px 5px;\r\n    text-indent: 10px;\r\n    font-size: 13px;\r\n    font-weight: 500;\r\n    background-color: #fff;\r\n    -webkit-font-smoothing: antialiased;\r\n    text-align: left;\r\n\r\n    /*폼 디자인*/\r\n    border: 1px solid #ccc;\r\n`;\r\n\r\n//\r\nconst TextWrite = styled.textarea`\r\n    width: 1024px;\r\n    height: 500px;\r\n    resize: none;\r\n    border: none;\r\n    outline: none;\r\n    border: 1px solid #ccc;\r\n    margin-top: 20px;\r\n    \r\n    /*폰트 디자인*/\r\n    text-indent: 10px;\r\n    font-size: 13px;\r\n    font-weight: 500;\r\n    background-color: #fff;\r\n    -webkit-font-smoothing: antialiased;\r\n    text-align: left;\r\n    padding: 15px 5px;\r\n`;\r\n\r\n\r\n\r\nconst FormWrite = styled.form`\r\n    width: 1024px;\r\n    /* border: 1px solid red; */\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}