{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\frontend_rock\\\\src\\\\pages\\\\Login\\\\MyPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { Navigation } from 'react-minimal-side-navigation';\nimport { Icon } from 'semantic-ui-react';\nimport { SET_TYPE } from 'reducers/postListType';\n\n// 마이페이지\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state.authentication);\n  const setArr = [];\n  useEffect(() => {\n    // 배열로 받은 태그목록을 배열 내 각각의 object로 변환한 뒤 아래 subNav에 전달\n    if (user) {\n      (user.user.tags || []).forEach(tag => {\n        const curObj = {};\n        curObj.title = tag;\n        curObj.itemId = `/tags/${tag}`;\n        setArr.push(curObj);\n      });\n    }\n  }, []);\n  const setType = itemId => {\n    if (typeof itemId === 'object') {\n      dispatch({\n        type: SET_TYPE,\n        item: `${itemId.item}`,\n        title: `${itemId.title}`,\n        isTag: false\n      });\n    }\n    if (typeof itemId === 'string') {\n      dispatch({\n        type: SET_TYPE,\n        item: `${itemId.slice(6)}`,\n        title: `${itemId.slice(6)}`,\n        isTag: true\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Warp, {\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      children: /*#__PURE__*/_jsxDEV(Navigation, {\n        onSelect: ({\n          itemId\n        }) => {\n          if (user && itemId !== '/tags') {\n            setType(itemId);\n          }\n          if (!user && itemId.item !== 'main') {\n            navigate('/signin');\n          }\n        },\n        items: [{\n          title: '피드',\n          itemId: {\n            item: 'main',\n            title: '피드'\n          },\n          elemBefore: () => /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"th large\",\n            style: {\n              fontSize: '1.2rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 47\n          }, this)\n        }, {\n          title: '관심태그',\n          itemId: '/tags',\n          elemBefore: () => /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"tags\",\n            style: {\n              fontSize: '1.2rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 47\n          }, this),\n          subNav: user ? setArr : null\n        }, {\n          title: '북마크',\n          itemId: {\n            item: 'bookmark',\n            title: '북마크'\n          },\n          elemBefore: () => /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"bookmark\",\n            style: {\n              fontSize: '1.2rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 47\n          }, this)\n        }, {\n          title: '읽은 목록',\n          itemId: {\n            item: 'study',\n            title: '읽은 목록'\n          },\n          elemBefore: () => /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"eye\",\n            style: {\n              fontSize: '1.2rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 47\n          }, this)\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 13\n  }, this);\n};\n_s(MyPage, \"LLD6RKMm0uTBW2TiY+ylqnj4NpI=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = MyPage;\nexport default MyPage;\n\n//style\n\nconst Warp = styled.div`\nwidth: 100%;\n    height: 100vh;\n    background-color: red;\n    \n`;\n_c2 = Warp;\nconst Bar = styled.div`\n    position: sticky;\n    top: 200px;\n    width: 10.5rem;\n    height: 100%;\n    /* position: fixed;\n    left: 19rem;\n    top: 12rem;\n    transform: translate(1em, 12rem); */\n`;\n_c3 = Bar;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MyPage\");\n$RefreshReg$(_c2, \"Warp\");\n$RefreshReg$(_c3, \"Bar\");","map":{"version":3,"names":["React","useEffect","styled","useDispatch","useSelector","useNavigate","Navigation","Icon","SET_TYPE","jsxDEV","_jsxDEV","MyPage","_s","navigate","dispatch","user","state","authentication","setArr","tags","forEach","tag","curObj","title","itemId","push","setType","type","item","isTag","slice","Warp","children","Bar","onSelect","items","elemBefore","name","style","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","subNav","_c","div","_c2","_c3","$RefreshReg$"],"sources":["C:/Users/Administrator/frontend_rock/src/pages/Login/MyPage.js"],"sourcesContent":["import React, {useEffect} from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {Navigation} from 'react-minimal-side-navigation';\r\n\r\nimport {Icon} from 'semantic-ui-react';\r\nimport {SET_TYPE} from 'reducers/postListType';\r\n\r\n\r\n// 마이페이지\r\nconst MyPage = () => {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const {user} = useSelector((state) => state.authentication);\r\n\r\n    const setArr = [];\r\n\r\n    useEffect(() => {\r\n        // 배열로 받은 태그목록을 배열 내 각각의 object로 변환한 뒤 아래 subNav에 전달\r\n        if (user) {\r\n            (user.user.tags || []).forEach((tag) => {\r\n                const curObj = {};\r\n                curObj.title = tag;\r\n                curObj.itemId = `/tags/${tag}`;\r\n                setArr.push(curObj);\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const setType = (itemId) => {\r\n        if (typeof itemId === 'object') {\r\n            dispatch({\r\n                type: SET_TYPE, item: `${itemId.item}`, title: `${itemId.title}`, isTag: false,\r\n            });\r\n        }\r\n\r\n        if (typeof itemId === 'string') {\r\n            dispatch({\r\n                type: SET_TYPE, item: `${itemId.slice(6)}`, title: `${itemId.slice(6)}`, isTag: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n            <Warp>\r\n                <Bar>\r\n                    <Navigation\r\n                        onSelect={({itemId}) => {\r\n                            if (user && itemId !== '/tags') {\r\n                                setType(itemId);\r\n                            }\r\n                            if (!user && itemId.item !== 'main') {\r\n                                navigate('/signin');\r\n                            }\r\n                        }}\r\n                        items={[{\r\n                            title: '피드',\r\n                            itemId: {item: 'main', title: '피드'},\r\n                            elemBefore: () => <Icon name=\"th large\" style={{fontSize: '1.2rem'}}/>,\r\n                        }, {\r\n                            title: '관심태그',\r\n                            itemId: '/tags',\r\n                            elemBefore: () => <Icon name=\"tags\" style={{fontSize: '1.2rem'}}/>,\r\n\r\n                            subNav: user ? setArr : null,\r\n                        }, {\r\n                            title: '북마크',\r\n                            itemId: {item: 'bookmark', title: '북마크'},\r\n                            elemBefore: () => <Icon name=\"bookmark\" style={{fontSize: '1.2rem'}}/>,\r\n                        }, {\r\n                            title: '읽은 목록',\r\n                            itemId: {item: 'study', title: '읽은 목록'},\r\n                            elemBefore: () => <Icon name=\"eye\" style={{fontSize: '1.2rem'}}/>,\r\n                        },]}\r\n                    />\r\n                </Bar>\r\n            </Warp>\r\n        );\r\n};\r\nexport default MyPage;\r\n\r\n//style\r\n\r\nconst Warp = styled.div`\r\nwidth: 100%;\r\n    height: 100vh;\r\n    background-color: red;\r\n    \r\n`;\r\n\r\n\r\nconst Bar = styled.div`\r\n    position: sticky;\r\n    top: 200px;\r\n    width: 10.5rem;\r\n    height: 100%;\r\n    /* position: fixed;\r\n    left: 19rem;\r\n    top: 12rem;\r\n    transform: translate(1em, 12rem); */\r\n`;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}