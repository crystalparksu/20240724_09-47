{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\n\n// import '../../common/css/FindIdPassword.css';\n// import \"../Login/css/FindIdPassword.css\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FindIdPassword() {\n  _s();\n  const navigate = useNavigate();\n  const [findIdForm, setFindIdForm] = useState({\n    memName: '',\n    memEmail: ''\n  });\n  const [findPasswordForm, setFindPasswordForm] = useState({\n    memId: '',\n    memEmail: ''\n  });\n  const [message, setMessage] = useState('');\n  const handleFindIdChange = e => {\n    setFindIdForm({\n      ...findIdForm,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleFindPasswordChange = e => {\n    setFindPasswordForm({\n      ...findPasswordForm,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleFindId = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('/auth/find-id', findIdForm);\n      alert(`아이디: ${response.data}`);\n    } catch (error) {\n      alert('회원정보를 찾지 못했습니다.');\n    }\n  };\n  const handleFindPassword = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('/auth/find-password', findPasswordForm);\n      setMessage('비밀번호 재설정 이메일 발송완료');\n      alert('비밀번호 재설정 이메일 발송완료');\n    } catch (error) {\n      setMessage('요청을 처리하는 동안 오류가 발생했습니다');\n      alert('요청을 처리하는 동안 오류가 발생했습니다');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(FindIdPassword, \"Bs6Q3S1q38TxlbWxYfsMaFpQKeA=\", false, function () {\n  return [useNavigate];\n});\n_c = FindIdPassword;\nexport default FindIdPassword;\nconst TabMenu = styled.ul`\n  background-color: #dcdcdc;\n  color: rgb(232, 234, 237);\n  font-weight: bold;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  list-style: none;\n  margin-bottom: 7rem;\n  margin-top: 10px;\n\n  .submenu {\n  // 기본 Tabmenu 에 대한 CSS를 구현\n    display: flex;\n    /* justify-content: space-between;\n    width: 380px;\n    heigth: 30px; */\n    width: calc(100% /3);\n    padding: 10px;\n    font-size: 15px;\n    transition: 0.5s;\n    border-radius: 10px 10px 0px 0px;\n  }\n\n  .focused {\n   //선택된 Tabmenu 에만 적용되는 CSS를 구현\n    background-color: rgb(255,255,255);\n    color: rgb(21,20,20);\n  }\n\n  & div.desc {\n    text-align: center;\n  }\n`;\nconst Desc = styled.div`\n  text-align: center;\n`;\nvar _c;\n$RefreshReg$(_c, \"FindIdPassword\");","map":{"version":3,"names":["React","useState","axios","useNavigate","styled","Fragment","_Fragment","jsxDEV","_jsxDEV","FindIdPassword","_s","navigate","findIdForm","setFindIdForm","memName","memEmail","findPasswordForm","setFindPasswordForm","memId","message","setMessage","handleFindIdChange","e","target","name","value","handleFindPasswordChange","handleFindId","preventDefault","response","post","alert","data","error","handleFindPassword","_c","TabMenu","ul","Desc","div","$RefreshReg$"],"sources":["C:/Users/Administrator/frontend_rock/src/pages/Login/FindIdPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\n// import '../../common/css/FindIdPassword.css';\r\n// import \"../Login/css/FindIdPassword.css\";\r\n\r\n\r\n\r\nfunction FindIdPassword() {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [findIdForm, setFindIdForm] = useState({\r\n        memName: '',\r\n        memEmail: ''\r\n    });\r\n\r\n    const [findPasswordForm, setFindPasswordForm] = useState({\r\n        memId: '',\r\n        memEmail: ''\r\n    });\r\n\r\n    const [message, setMessage] = useState('');\r\n\r\n    const handleFindIdChange = (e) => {\r\n        setFindIdForm({ ...findIdForm, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleFindPasswordChange = (e) => {\r\n        setFindPasswordForm({ ...findPasswordForm, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleFindId = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const response = await axios.post('/auth/find-id', findIdForm);\r\n            alert(`아이디: ${response.data}`);\r\n        } catch (error) {\r\n            alert('회원정보를 찾지 못했습니다.');\r\n        }\r\n    };\r\n\r\n    const handleFindPassword = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post('/auth/find-password', findPasswordForm);\r\n\r\n            setMessage('비밀번호 재설정 이메일 발송완료');\r\n\r\n            alert('비밀번호 재설정 이메일 발송완료');\r\n\r\n        } catch (error) {\r\n            setMessage('요청을 처리하는 동안 오류가 발생했습니다');\r\n\r\n            alert('요청을 처리하는 동안 오류가 발생했습니다');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\nexport default FindIdPassword;\r\n\r\n\r\n\r\nconst TabMenu = styled.ul`\r\n  background-color: #dcdcdc;\r\n  color: rgb(232, 234, 237);\r\n  font-weight: bold;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  list-style: none;\r\n  margin-bottom: 7rem;\r\n  margin-top: 10px;\r\n\r\n  .submenu {\r\n  // 기본 Tabmenu 에 대한 CSS를 구현\r\n    display: flex;\r\n    /* justify-content: space-between;\r\n    width: 380px;\r\n    heigth: 30px; */\r\n    width: calc(100% /3);\r\n    padding: 10px;\r\n    font-size: 15px;\r\n    transition: 0.5s;\r\n    border-radius: 10px 10px 0px 0px;\r\n  }\r\n\r\n  .focused {\r\n   //선택된 Tabmenu 에만 적용되는 CSS를 구현\r\n    background-color: rgb(255,255,255);\r\n    color: rgb(21,20,20);\r\n  }\r\n\r\n  & div.desc {\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst Desc = styled.div`\r\n  text-align: center;\r\n`;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,mBAAmB;;AAEtC;AACA;AAAA,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAIA,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAEtB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC;IACzCa,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE;EACd,CAAC,CAAC;EAEF,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhB,QAAQ,CAAC;IACrDiB,KAAK,EAAE,EAAE;IACTH,QAAQ,EAAE;EACd,CAAC,CAAC;EAEF,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMoB,kBAAkB,GAAIC,CAAC,IAAK;IAC9BT,aAAa,CAAC;MAAE,GAAGD,UAAU;MAAE,CAACU,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EACrE,CAAC;EAED,MAAMC,wBAAwB,GAAIJ,CAAC,IAAK;IACpCL,mBAAmB,CAAC;MAAE,GAAGD,gBAAgB;MAAE,CAACM,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EACjF,CAAC;EAED,MAAME,YAAY,GAAG,MAAOL,CAAC,IAAK;IAC9BA,CAAC,CAACM,cAAc,CAAC,CAAC;IAElB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAM3B,KAAK,CAAC4B,IAAI,CAAC,eAAe,EAAElB,UAAU,CAAC;MAC9DmB,KAAK,CAAC,QAAQF,QAAQ,CAACG,IAAI,EAAE,CAAC;IAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZF,KAAK,CAAC,iBAAiB,CAAC;IAC5B;EACJ,CAAC;EAED,MAAMG,kBAAkB,GAAG,MAAOZ,CAAC,IAAK;IACpCA,CAAC,CAACM,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAM3B,KAAK,CAAC4B,IAAI,CAAC,qBAAqB,EAAEd,gBAAgB,CAAC;MAE1EI,UAAU,CAAC,mBAAmB,CAAC;MAE/BW,KAAK,CAAC,mBAAmB,CAAC;IAE9B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZb,UAAU,CAAC,wBAAwB,CAAC;MAEpCW,KAAK,CAAC,wBAAwB,CAAC;IACnC;EACJ,CAAC;EAED,oBACIvB,OAAA,CAAAF,SAAA,mBAGE,CAAC;AAEX;AAACI,EAAA,CAzDQD,cAAc;EAAA,QAEFN,WAAW;AAAA;AAAAgC,EAAA,GAFvB1B,cAAc;AA0DvB,eAAeA,cAAc;AAI7B,MAAM2B,OAAO,GAAGhC,MAAM,CAACiC,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,IAAI,GAAGlC,MAAM,CAACmC,GAAG;AACvB;AACA,CAAC;AAAC,IAAAJ,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}