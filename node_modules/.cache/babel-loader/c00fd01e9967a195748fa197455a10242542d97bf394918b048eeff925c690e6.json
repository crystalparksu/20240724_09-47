{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\frontend_rock\\\\src\\\\pages\\\\Login\\\\FindIdPassword.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport styled from 'styled-components';\n\n// import '../../common/css/FindIdPassword.css';\n// import \"../Login/css/FindIdPassword.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const FindIdPassword = () => {\n  _s();\n  // Tab Menu 중 현재 어떤 Tab이 선택되어 있는지 확인하기 위한 currentTab 상태와 currentTab을 갱신하는 함수가 존재해야 하고, 초기값은 0.\n  const [currentTab, clickTab] = useState(0);\n  const menuArr = [{\n    name: 'Tab1',\n    content: 'Tab menu ONE'\n  }, {\n    name: 'Tab2',\n    content: 'Tab menu TWO'\n  }, {\n    name: 'Tab3',\n    content: 'Tab menu THREE'\n  }];\n  const selectMenuHandler = index => {\n    // parameter로 현재 선택한 인덱스 값을 전달해야 하며, 이벤트 객체(event)는 쓰지 않는다\n    // 해당 함수가 실행되면 현재 선택된 Tab Menu 가 갱신.\n    clickTab(index);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TabMenu, {\n        children: [\"// \\uC544\\uB798 \\uD558\\uB4DC\\uCF54\\uB529\\uB41C \\uB0B4\\uC6A9 \\uB300\\uC2E0\\uC5D0, map\\uC744 \\uC774\\uC6A9\\uD55C \\uBC18\\uBCF5\\uC73C\\uB85C \\uCF54\\uB4DC\\uB97C \\uC218\\uC815 // li \\uC5D8\\uB9AC\\uBA3C\\uD2B8\\uC758 class\\uBA85\\uC758 \\uACBD\\uC6B0 \\uC120\\uD0DD\\uB41C tab \\uC740 'submenu focused', \\uB098\\uBA38\\uC9C0 2\\uAC1C\\uC758 tab\\uC740 'submenu'\", menuArr.map((el, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: index === currentTab ? \"submenu focused\" : \"submenu\",\n          onClick: () => selectMenuHandler(index),\n          children: el.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Desc, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: menuArr[currentTab].content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(FindIdPassword, \"RvUix/JOOBFNPmZMtzPVPvvlGT4=\");\n_c = FindIdPassword;\nexport default FindIdPassword;\n\n// const navigate = useNavigate();\n//\n// const [findIdForm, setFindIdForm] = useState({\n//     memName: '',\n//     memEmail: ''\n// });\n//\n// const [findPasswordForm, setFindPasswordForm] = useState({\n//     memId: '',\n//     memEmail: ''\n// });\n//\n// const [message, setMessage] = useState('');\n//\n// const handleFindIdChange = (e) => {\n//     setFindIdForm({ ...findIdForm, [e.target.name]: e.target.value });\n// };\n//\n// const handleFindPasswordChange = (e) => {\n//     setFindPasswordForm({ ...findPasswordForm, [e.target.name]: e.target.value });\n// };\n//\n// const handleFindId = async (e) => {\n//     e.preventDefault();\n//\n//     try {\n//         const response = await axios.post('/auth/find-id', findIdForm);\n//         alert(`아이디: ${response.data}`);\n//     } catch (error) {\n//         alert('회원정보를 찾지 못했습니다.');\n//     }\n// };\n//\n// const handleFindPassword = async (e) => {\n//     e.preventDefault();\n//     try {\n//         const response = await axios.post('/auth/find-password', findPasswordForm);\n//\n//         setMessage('비밀번호 재설정 이메일 발송완료');\n//\n//         alert('비밀번호 재설정 이메일 발송완료');\n//\n//     } catch (error) {\n//         setMessage('요청을 처리하는 동안 오류가 발생했습니다');\n//\n//         alert('요청을 처리하는 동안 오류가 발생했습니다');\n//     }\n// };\n\n// function FindIdPassword() {\n//\n//\n//\n//     return (\n//         <>\n//\n//\n//         </>\n//     );\n// }\n// export default FindIdPassword;\n\n// Styled-Component 라이브러리를 활용해 TabMenu 와 Desc 컴포넌트의 CSS를 구현.\n\nconst TabMenu = styled.ul`\n    background-color: #dcdcdc;\n    color: rgb(232, 234, 237);\n    font-weight: bold;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    list-style: none;\n    margin-bottom: 7rem;\n    margin-top: 10px;\n\n    .submenu {\n        // 기본 Tabmenu 에 대한 CSS를 구현\n        display: flex;\n        /* justify-content: space-between;\n        width: 380px;\n        heigth: 30px; */\n        width: calc(100% /3);\n        padding: 10px;\n        font-size: 15px;\n        transition: 0.5s;\n        border-radius: 10px 10px 0px 0px;\n    }\n\n    .focused {\n        //선택된 Tabmenu 에만 적용되는 CSS를 구현\n        background-color: rgb(255,255,255);\n        color: rgb(21,20,20);\n    }\n\n    & div.desc {\n        text-align: center;\n    }\n`;\n_c2 = TabMenu;\nconst Desc = styled.div`\n    text-align: center;\n`;\n_c3 = Desc;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"FindIdPassword\");\n$RefreshReg$(_c2, \"TabMenu\");\n$RefreshReg$(_c3, \"Desc\");","map":{"version":3,"names":["useState","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","FindIdPassword","_s","currentTab","clickTab","menuArr","name","content","selectMenuHandler","index","children","TabMenu","map","el","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Desc","_c","ul","_c2","div","_c3","$RefreshReg$"],"sources":["C:/Users/Administrator/frontend_rock/src/pages/Login/FindIdPassword.js"],"sourcesContent":["import { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\n// import '../../common/css/FindIdPassword.css';\r\n// import \"../Login/css/FindIdPassword.css\";\r\n\r\n\r\n\r\n\r\n\r\nexport const FindIdPassword = () => {\r\n    // Tab Menu 중 현재 어떤 Tab이 선택되어 있는지 확인하기 위한 currentTab 상태와 currentTab을 갱신하는 함수가 존재해야 하고, 초기값은 0.\r\n    const [currentTab, clickTab] = useState(0);\r\n\r\n    const menuArr = [\r\n        { name: 'Tab1', content: 'Tab menu ONE' },\r\n        { name: 'Tab2', content: 'Tab menu TWO' },\r\n        { name: 'Tab3', content: 'Tab menu THREE' },\r\n    ];\r\n\r\n    const selectMenuHandler = (index) => {\r\n        // parameter로 현재 선택한 인덱스 값을 전달해야 하며, 이벤트 객체(event)는 쓰지 않는다\r\n        // 해당 함수가 실행되면 현재 선택된 Tab Menu 가 갱신.\r\n        clickTab(index);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <TabMenu>\r\n                    // 아래 하드코딩된 내용 대신에, map을 이용한 반복으로 코드를 수정\r\n                    // li 엘리먼트의 class명의 경우 선택된 tab 은 'submenu focused', 나머지 2개의 tab은 'submenu'\r\n                    {/* <li className=\"submenu\">{menuArr[0].name}</li>\r\n          <li className=\"submenu\">{menuArr[1].name}</li>\r\n          <li className=\"submenu\">{menuArr[2].name}</li> */}\r\n                    {menuArr.map((el,index) => (\r\n                        <li className={index === currentTab ? \"submenu focused\" : \"submenu\" }\r\n                            onClick={() => selectMenuHandler(index)}>{el.name}</li>\r\n                    ))}\r\n                </TabMenu>\r\n                <Desc>\r\n                    <p>{menuArr[currentTab].content}</p>\r\n                </Desc>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default FindIdPassword;\r\n\r\n\r\n\r\n// const navigate = useNavigate();\r\n//\r\n// const [findIdForm, setFindIdForm] = useState({\r\n//     memName: '',\r\n//     memEmail: ''\r\n// });\r\n//\r\n// const [findPasswordForm, setFindPasswordForm] = useState({\r\n//     memId: '',\r\n//     memEmail: ''\r\n// });\r\n//\r\n// const [message, setMessage] = useState('');\r\n//\r\n// const handleFindIdChange = (e) => {\r\n//     setFindIdForm({ ...findIdForm, [e.target.name]: e.target.value });\r\n// };\r\n//\r\n// const handleFindPasswordChange = (e) => {\r\n//     setFindPasswordForm({ ...findPasswordForm, [e.target.name]: e.target.value });\r\n// };\r\n//\r\n// const handleFindId = async (e) => {\r\n//     e.preventDefault();\r\n//\r\n//     try {\r\n//         const response = await axios.post('/auth/find-id', findIdForm);\r\n//         alert(`아이디: ${response.data}`);\r\n//     } catch (error) {\r\n//         alert('회원정보를 찾지 못했습니다.');\r\n//     }\r\n// };\r\n//\r\n// const handleFindPassword = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//         const response = await axios.post('/auth/find-password', findPasswordForm);\r\n//\r\n//         setMessage('비밀번호 재설정 이메일 발송완료');\r\n//\r\n//         alert('비밀번호 재설정 이메일 발송완료');\r\n//\r\n//     } catch (error) {\r\n//         setMessage('요청을 처리하는 동안 오류가 발생했습니다');\r\n//\r\n//         alert('요청을 처리하는 동안 오류가 발생했습니다');\r\n//     }\r\n// };\r\n\r\n\r\n\r\n// function FindIdPassword() {\r\n//\r\n//\r\n//\r\n//     return (\r\n//         <>\r\n//\r\n//\r\n//         </>\r\n//     );\r\n// }\r\n// export default FindIdPassword;\r\n\r\n\r\n// Styled-Component 라이브러리를 활용해 TabMenu 와 Desc 컴포넌트의 CSS를 구현.\r\n\r\nconst TabMenu = styled.ul`\r\n    background-color: #dcdcdc;\r\n    color: rgb(232, 234, 237);\r\n    font-weight: bold;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    list-style: none;\r\n    margin-bottom: 7rem;\r\n    margin-top: 10px;\r\n\r\n    .submenu {\r\n        // 기본 Tabmenu 에 대한 CSS를 구현\r\n        display: flex;\r\n        /* justify-content: space-between;\r\n        width: 380px;\r\n        heigth: 30px; */\r\n        width: calc(100% /3);\r\n        padding: 10px;\r\n        font-size: 15px;\r\n        transition: 0.5s;\r\n        border-radius: 10px 10px 0px 0px;\r\n    }\r\n\r\n    .focused {\r\n        //선택된 Tabmenu 에만 적용되는 CSS를 구현\r\n        background-color: rgb(255,255,255);\r\n        color: rgb(21,20,20);\r\n    }\r\n\r\n    & div.desc {\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst Desc = styled.div`\r\n    text-align: center;\r\n`;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,mBAAmB;;AAGtC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAMA,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC;EACA,MAAM,CAACC,UAAU,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAE1C,MAAMU,OAAO,GAAG,CACZ;IAAEC,IAAI,EAAE,MAAM;IAAEC,OAAO,EAAE;EAAe,CAAC,EACzC;IAAED,IAAI,EAAE,MAAM;IAAEC,OAAO,EAAE;EAAe,CAAC,EACzC;IAAED,IAAI,EAAE,MAAM;IAAEC,OAAO,EAAE;EAAiB,CAAC,CAC9C;EAED,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACjC;IACA;IACAL,QAAQ,CAACK,KAAK,CAAC;EACnB,CAAC;EAED,oBACIX,OAAA,CAAAE,SAAA;IAAAU,QAAA,eACIZ,OAAA;MAAAY,QAAA,gBACIZ,OAAA,CAACa,OAAO;QAAAD,QAAA,GAAC,iVAGL,EAGCL,OAAO,CAACO,GAAG,CAAC,CAACC,EAAE,EAACJ,KAAK,kBAClBX,OAAA;UAAIgB,SAAS,EAAEL,KAAK,KAAKN,UAAU,GAAG,iBAAiB,GAAG,SAAW;UACjEY,OAAO,EAAEA,CAAA,KAAMP,iBAAiB,CAACC,KAAK,CAAE;UAAAC,QAAA,EAAEG,EAAE,CAACP;QAAI;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAC7D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACVrB,OAAA,CAACsB,IAAI;QAAAV,QAAA,eACDZ,OAAA;UAAAY,QAAA,EAAIL,OAAO,CAACF,UAAU,CAAC,CAACI;QAAO;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC,gBACR,CAAC;AAEX,CAAC;AAAAjB,EAAA,CApCYD,cAAc;AAAAoB,EAAA,GAAdpB,cAAc;AAqC3B,eAAeA,cAAc;;AAI7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA,MAAMU,OAAO,GAAGf,MAAM,CAAC0B,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAjCIZ,OAAO;AAmCb,MAAMS,IAAI,GAAGxB,MAAM,CAAC4B,GAAG;AACvB;AACA,CAAC;AAACC,GAAA,GAFIL,IAAI;AAAA,IAAAC,EAAA,EAAAE,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}