{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\frontend_rock\\\\src\\\\pages\\\\Login\\\\MyPage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./css/sidebar.css\";\nimport styled from \"styled-components\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport SidebarItem from \"./SidebarItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyPage() {\n  _s();\n  // URL의 path값을 받아올 수 있다.\n  const pathName = useLocation().pathname;\n  const menus = [{\n    name: \"내가 찜한 리스트\",\n    path: \"/\"\n  }, {\n    name: \"내가 작성한 리뷰\",\n    path: \"/members\"\n  }, {\n    name: \"개인 정보 수정\",\n    path: \"/cashes\"\n  }];\n  return /*#__PURE__*/_jsxDEV(Wrap, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: menus.map((menu, index) => {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: menu.path,\n          children: /*#__PURE__*/_jsxDEV(SidebarItem, {\n            menu: menu,\n            isActive: pathName === menu.path ? true : false // 현재 URL pathname과 객체에 담긴 path값 일치 여부 확인\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_s(MyPage, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n  return [useLocation];\n});\n_c = MyPage;\nexport default MyPage;\n\n// 폼 디자인\nconst Wrap = styled.div`\n    display: flex;\n    border-right: 1px solid #e0e0e0;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    width: 20%;\n`;\n_c2 = Wrap;\nvar _c, _c2;\n$RefreshReg$(_c, \"MyPage\");\n$RefreshReg$(_c2, \"Wrap\");","map":{"version":3,"names":["React","styled","Link","useLocation","SidebarItem","jsxDEV","_jsxDEV","MyPage","_s","pathName","pathname","menus","name","path","Wrap","children","className","map","menu","index","to","isActive","fileName","_jsxFileName","lineNumber","columnNumber","_c","div","_c2","$RefreshReg$"],"sources":["C:/Users/Administrator/frontend_rock/src/pages/Login/MyPage.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./css/sidebar.css\";\r\nimport styled from \"styled-components\";\r\nimport {Link, useLocation} from \"react-router-dom\";\r\nimport SidebarItem from \"./SidebarItem\";\r\n\r\n\r\nfunction MyPage() {\r\n\r\n    // URL의 path값을 받아올 수 있다.\r\n    const pathName = useLocation().pathname;\r\n\r\n    const menus = [{name: \"내가 찜한 리스트\", path: \"/\"}, {name: \"내가 작성한 리뷰\", path: \"/members\"}, {\r\n        name: \"개인 정보 수정\",\r\n        path: \"/cashes\"\r\n    }];\r\n\r\n    return (\r\n        <Wrap>\r\n            <div className=\"sidebar\">\r\n                {menus.map((menu, index) => {\r\n                    return (<Link to={menu.path} key={index}>\r\n                            <SidebarItem\r\n                                menu={menu}\r\n                                isActive={pathName === menu.path ? true : false}    // 현재 URL pathname과 객체에 담긴 path값 일치 여부 확인\r\n                            />\r\n                        </Link>);\r\n                })}\r\n            </div>\r\n        </Wrap>\r\n    );\r\n}\r\nexport default MyPage;\r\n\r\n\r\n// 폼 디자인\r\nconst Wrap = styled.div`\r\n    display: flex;\r\n    border-right: 1px solid #e0e0e0;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 20%;\r\n`;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB;AAC1B,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAAQC,IAAI,EAAEC,WAAW,QAAO,kBAAkB;AAClD,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAEd;EACA,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC,CAACO,QAAQ;EAEvC,MAAMC,KAAK,GAAG,CAAC;IAACC,IAAI,EAAE,WAAW;IAAEC,IAAI,EAAE;EAAG,CAAC,EAAE;IAACD,IAAI,EAAE,WAAW;IAAEC,IAAI,EAAE;EAAU,CAAC,EAAE;IAClFD,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE;EACV,CAAC,CAAC;EAEF,oBACIP,OAAA,CAACQ,IAAI;IAAAC,QAAA,eACDT,OAAA;MAAKU,SAAS,EAAC,SAAS;MAAAD,QAAA,EACnBJ,KAAK,CAACM,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QACxB,oBAAQb,OAAA,CAACJ,IAAI;UAACkB,EAAE,EAAEF,IAAI,CAACL,IAAK;UAAAE,QAAA,eACpBT,OAAA,CAACF,WAAW;YACRc,IAAI,EAAEA,IAAK;YACXG,QAAQ,EAAEZ,QAAQ,KAAKS,IAAI,CAACL,IAAI,GAAG,IAAI,GAAG,KAAM,CAAI;UAAA;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvD;QAAC,GAJwBN,KAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAK7B,CAAC;MACf,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEf;AAACjB,EAAA,CAxBQD,MAAM;EAAA,QAGMJ,WAAW;AAAA;AAAAuB,EAAA,GAHvBnB,MAAM;AAyBf,eAAeA,MAAM;;AAGrB;AACA,MAAMO,IAAI,GAAGb,MAAM,CAAC0B,GAAG;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAPId,IAAI;AAAA,IAAAY,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}