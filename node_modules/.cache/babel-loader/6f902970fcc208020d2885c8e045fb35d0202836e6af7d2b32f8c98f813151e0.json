{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\frontend_rock\\\\src\\\\pages\\\\Login\\\\FindIdPassword.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport styled from 'styled-components';\n// import '../../common/css/FindIdPassword.css';\n// import \"../Login/css/FindIdPassword.css\";\n\n//아이디&비밀번호 재설정\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const FindIdPassword = () => {\n  _s();\n  const navigate = useNavigate();\n  const [findIdForm, setFindIdForm] = useState({\n    memName: '',\n    memEmail: ''\n  });\n  const [findPasswordForm, setFindPasswordForm] = useState({\n    memId: '',\n    memEmail: ''\n  });\n  const [message, setMessage] = useState('');\n  const handleFindIdChange = e => {\n    setFindIdForm({\n      ...findIdForm,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleFindPasswordChange = e => {\n    setFindPasswordForm({\n      ...findPasswordForm,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleFindId = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('/auth/find-id', findIdForm);\n      alert(`아이디: ${response.data}`);\n    } catch (error) {\n      alert('회원정보를 찾지 못했습니다.');\n    }\n  };\n  const handleFindPassword = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('/auth/find-password', findPasswordForm);\n      setMessage('비밀번호 재설정 이메일 발송완료');\n      alert('비밀번호 재설정 이메일 발송완료');\n    } catch (error) {\n      setMessage('요청을 처리하는 동안 오류가 발생했습니다');\n      alert('요청을 처리하는 동안 오류가 발생했습니다');\n    }\n  };\n\n  //====================================================\n  // Tab Menu 중 현재 어떤 Tab이 선택되어 있는지 확인하기 위한 currentTab 상태와 currentTab을 갱신하는 함수가 존재해야 하고, 초기값은 0.\n  const [currentTab, clickTab] = useState(0);\n  const menuArr = [{\n    name: '아이디찾기',\n    content: 'Tab menu ONE'\n  }, {\n    name: '비밀번호 재설정',\n    content: 'Tab menu TWO'\n  }\n  // { name: 'Tab3', content: 'Tab menu THREE' },\n  ];\n  const selectMenuHandler = index => {\n    // parameter로 현재 선택한 인덱스 값을 전달해야 하며, 이벤트 객체(event)는 쓰지 않는다\n    // 해당 함수가 실행되면 현재 선택된 Tab Menu 가 갱신.\n    clickTab(index);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TabMenu, {\n        children: menuArr.map((el, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: index === currentTab ? \"submenu focused\" : \"submenu\",\n          onClick: () => selectMenuHandler(index),\n          children: el.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Desc, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: menuArr[currentTab].content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(FindIdPassword, \"GJO+rs+bQlzprPZ1frKgDnoH/80=\", true);\n_c = FindIdPassword;\nexport default FindIdPassword;\n\n// Styled-Component 라이브러리를 활용해 TabMenu 와 Desc 컴포넌트의 CSS를 구현.\nconst TabMenu = styled.ul`\n    background-color: #dcdcdc;\n    color: rgb(232, 234, 237);\n    font-weight: bold;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    list-style: none;\n    margin-bottom: 7rem;\n    margin-top: 10px;\n\n    .submenu {\n        // 기본 Tabmenu 에 대한 CSS를 구현\n        display: flex;\n        /* justify-content: space-between;\n        width: 380px;\n        heigth: 30px; */\n        width: calc(100% /3);\n        padding: 10px;\n        font-size: 15px;\n        transition: 0.5s;\n        border-radius: 10px 10px 0px 0px;\n    }\n\n    .focused {\n        //선택된 Tabmenu 에만 적용되는 CSS를 구현\n        background-color: rgb(255,255,255);\n        color: rgb(21,20,20);\n    }\n\n    & div.desc {\n        text-align: center;\n    }\n`;\n_c2 = TabMenu;\nconst Desc = styled.div`\n    text-align: center;\n`;\n_c3 = Desc;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"FindIdPassword\");\n$RefreshReg$(_c2, \"TabMenu\");\n$RefreshReg$(_c3, \"Desc\");","map":{"version":3,"names":["useState","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","FindIdPassword","_s","navigate","useNavigate","findIdForm","setFindIdForm","memName","memEmail","findPasswordForm","setFindPasswordForm","memId","message","setMessage","handleFindIdChange","e","target","name","value","handleFindPasswordChange","handleFindId","preventDefault","response","axios","post","alert","data","error","handleFindPassword","currentTab","clickTab","menuArr","content","selectMenuHandler","index","children","TabMenu","map","el","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Desc","_c","ul","_c2","div","_c3","$RefreshReg$"],"sources":["C:/Users/Administrator/frontend_rock/src/pages/Login/FindIdPassword.js"],"sourcesContent":["import { useState } from 'react';\r\nimport styled from 'styled-components';\r\n// import '../../common/css/FindIdPassword.css';\r\n// import \"../Login/css/FindIdPassword.css\";\r\n\r\n\r\n\r\n//아이디&비밀번호 재설정\r\nexport const FindIdPassword = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [findIdForm, setFindIdForm] = useState({\r\n        memName: '',\r\n        memEmail: ''\r\n    });\r\n\r\n    const [findPasswordForm, setFindPasswordForm] = useState({\r\n        memId: '',\r\n        memEmail: ''\r\n    });\r\n\r\n    const [message, setMessage] = useState('');\r\n\r\n    const handleFindIdChange = (e) => {\r\n        setFindIdForm({ ...findIdForm, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleFindPasswordChange = (e) => {\r\n        setFindPasswordForm({ ...findPasswordForm, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleFindId = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const response = await axios.post('/auth/find-id', findIdForm);\r\n            alert(`아이디: ${response.data}`);\r\n        } catch (error) {\r\n            alert('회원정보를 찾지 못했습니다.');\r\n        }\r\n    };\r\n\r\n    const handleFindPassword = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post('/auth/find-password', findPasswordForm);\r\n\r\n            setMessage('비밀번호 재설정 이메일 발송완료');\r\n\r\n            alert('비밀번호 재설정 이메일 발송완료');\r\n\r\n        } catch (error) {\r\n            setMessage('요청을 처리하는 동안 오류가 발생했습니다');\r\n\r\n            alert('요청을 처리하는 동안 오류가 발생했습니다');\r\n        }\r\n    };\r\n\r\n\r\n//====================================================\r\n    // Tab Menu 중 현재 어떤 Tab이 선택되어 있는지 확인하기 위한 currentTab 상태와 currentTab을 갱신하는 함수가 존재해야 하고, 초기값은 0.\r\n    const [currentTab, clickTab] = useState(0);\r\n\r\n    const menuArr = [\r\n        { name: '아이디찾기', content: 'Tab menu ONE' },\r\n        { name: '비밀번호 재설정', content: 'Tab menu TWO' },\r\n        // { name: 'Tab3', content: 'Tab menu THREE' },\r\n    ];\r\n\r\n\r\n    const selectMenuHandler = (index) => {\r\n        // parameter로 현재 선택한 인덱스 값을 전달해야 하며, 이벤트 객체(event)는 쓰지 않는다\r\n        // 해당 함수가 실행되면 현재 선택된 Tab Menu 가 갱신.\r\n        clickTab(index);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <TabMenu>\r\n                    {/*// 아래 하드코딩된 내용 대신에, map을 이용한 반복으로 코드를 수정*/}\r\n                    {/*// li 엘리먼트의 class명의 경우 선택된 tab 은 'submenu focused', 나머지 2개의 tab은 'submenu'*/}\r\n\r\n\r\n                    {/*<li className=\"submenu\">{menuArr[0].name}</li>*/}\r\n                    {/*<li className=\"submenu\">{menuArr[1].name}</li>*/}\r\n                    {/*<li className=\"submenu\">{menuArr[2].name}</li>*/}\r\n\r\n                    {menuArr.map((el,index) => (\r\n                        <li className={index === currentTab ? \"submenu focused\" : \"submenu\" }\r\n                            onClick={() => selectMenuHandler(index)}>{el.name}</li>\r\n                    ))}\r\n\r\n                </TabMenu>\r\n\r\n\r\n                <Desc>\r\n                    <p>{menuArr[currentTab].content}</p>\r\n                </Desc>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default FindIdPassword;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Styled-Component 라이브러리를 활용해 TabMenu 와 Desc 컴포넌트의 CSS를 구현.\r\nconst TabMenu = styled.ul`\r\n    background-color: #dcdcdc;\r\n    color: rgb(232, 234, 237);\r\n    font-weight: bold;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    list-style: none;\r\n    margin-bottom: 7rem;\r\n    margin-top: 10px;\r\n\r\n    .submenu {\r\n        // 기본 Tabmenu 에 대한 CSS를 구현\r\n        display: flex;\r\n        /* justify-content: space-between;\r\n        width: 380px;\r\n        heigth: 30px; */\r\n        width: calc(100% /3);\r\n        padding: 10px;\r\n        font-size: 15px;\r\n        transition: 0.5s;\r\n        border-radius: 10px 10px 0px 0px;\r\n    }\r\n\r\n    .focused {\r\n        //선택된 Tabmenu 에만 적용되는 CSS를 구현\r\n        background-color: rgb(255,255,255);\r\n        color: rgb(21,20,20);\r\n    }\r\n\r\n    & div.desc {\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst Desc = styled.div`\r\n    text-align: center;\r\n`;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}