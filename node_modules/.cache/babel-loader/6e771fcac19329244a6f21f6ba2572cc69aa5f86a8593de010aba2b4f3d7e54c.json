{"ast":null,"code":"// import React, { useState } from 'react';\n// import { useNavigate, useParams } from 'react-router-dom';\n// import styled, { keyframes } from 'styled-components';\n\n// //====================================\n// function SwiperCard({ movie }) {\n//     const [isMouseHover, setIsMouseHover] = useState(false);\n//     const {\n//         movieName,\n//         movieNameInEnglish,\n//         movieThumbnailImageUrl,\n//         movieSimpleDescription,\n//     } = movie;\n\n//     const navigate = useNavigate();\n\n//     const goToBooking = () => {\n//         navigate(`/`);\n//     };\n//     const onMouseOverMovie = () => {\n//         setIsMouseHover(true);\n//     };\n\n//     const onMouseOutMovie = () => {\n//         setIsMouseHover(false);\n//     };\n\n//     return (\n//         <SwiperCardContainer\n//             onMouseOver={onMouseOverMovie}\n//             onMouseOut={onMouseOutMovie}\n//         >\n//             <Overlay isMouseHover={isMouseHover}>\n//                 <OverlayText>{movieSimpleDescription}</OverlayText>\n//                 <MouseHoverButton>\n//                     <OverlayBtn\n//                         onClick={() => {\n//                             navigate(`/movieDetail/${movie.id}`);\n//                         }}\n//                     >\n//                         상세 보기\n//                     </OverlayBtn>\n//                     <OverlayBtn onClick={goToBooking}>예약 하기</OverlayBtn>\n//                 </MouseHoverButton>\n//             </Overlay>\n//             <PosterImg src={movieThumbnailImageUrl} />\n//             <MovieInfoTextWrapper>\n//                 <MovieInfoTitle>{movieName}</MovieInfoTitle>\n//                 <MovieInfoText>{movieNameInEnglish}</MovieInfoText>\n//             </MovieInfoTextWrapper>\n//         </SwiperCardContainer>\n//     );\n// }\n// export default SwiperCard;\n\n// const fadeIn = keyframes`\n//   0% {\n//     opacity: 0;\n//   }\n//   100% {\n//     opacity: 1;\n//   }\n// `;\n\n// const SwiperCardContainer = styled.div`\n//   position: relative;\n// `;\n\n// const Overlay = styled.div`\n//   display: ${props => (props.isMouseHover ? 'block' : 'none')};\n//   position: absolute;\n//   width: 300px;\n//   height: 430px;\n//   border-radius: 10px;\n//   background: rgba(112, 99, 255, 0.3);\n//   backdrop-filter: blur(20px);\n//   animation: ${fadeIn} 0.1s ease-out;\n//   z-index: 100;\n// `;\n\n// const OverlayText = styled.p`\n//   width: 230px;\n//   margin: auto;\n//   margin-top: 100px;\n//   font-weight: 400;\n//   text-align: center;\n//   color: white;\n//   font-size: 18px;\n//   line-height: 25px;\n// `;\n\n// const OverlayBtn = styled.button`\n//   width: 150px;\n//   height: 50px;\n//   margin-top: 30px;\n//   border: 0px;\n//   border-radius: 10px;\n//   background: #7063ff;\n//   color: white;\n//   font-size: 20px;\n//   font-weight: 400;\n//   cursor: pointer;\n\n//   &:hover {\n//     background: white;\n//     color: #7063ff;\n//     box-shadow: 1.8px 3.7px 8px #767676;\n//   }\n// `;\n\n// const PosterImg = styled.img`\n//   width: 100%;\n// `;\n\n// const MovieInfoTextWrapper = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   margin-top: 30px;\n// `;\n\n// const MovieInfoTitle = styled.h3`\n//   font-weight: 700;\n//   font-size: 20px;\n// `;\n\n// const MovieInfoText = styled.span`\n//   margin-top: 10px;\n//   font-size: 15px;\n//   color: gray;\n// `;\n// const MouseHoverButton = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   margin-left: 75px;\n// `;","map":{"version":3,"names":[],"sources":["C:/Users/Administrator/frontend_rock/src/Pages/Main/Swiper/SwiperCard.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate, useParams } from 'react-router-dom';\r\n// import styled, { keyframes } from 'styled-components';\r\n\r\n\r\n\r\n// //====================================\r\n// function SwiperCard({ movie }) {\r\n//     const [isMouseHover, setIsMouseHover] = useState(false);\r\n//     const {\r\n//         movieName,\r\n//         movieNameInEnglish,\r\n//         movieThumbnailImageUrl,\r\n//         movieSimpleDescription,\r\n//     } = movie;\r\n\r\n//     const navigate = useNavigate();\r\n\r\n//     const goToBooking = () => {\r\n//         navigate(`/`);\r\n//     };\r\n//     const onMouseOverMovie = () => {\r\n//         setIsMouseHover(true);\r\n//     };\r\n\r\n//     const onMouseOutMovie = () => {\r\n//         setIsMouseHover(false);\r\n//     };\r\n\r\n//     return (\r\n//         <SwiperCardContainer\r\n//             onMouseOver={onMouseOverMovie}\r\n//             onMouseOut={onMouseOutMovie}\r\n//         >\r\n//             <Overlay isMouseHover={isMouseHover}>\r\n//                 <OverlayText>{movieSimpleDescription}</OverlayText>\r\n//                 <MouseHoverButton>\r\n//                     <OverlayBtn\r\n//                         onClick={() => {\r\n//                             navigate(`/movieDetail/${movie.id}`);\r\n//                         }}\r\n//                     >\r\n//                         상세 보기\r\n//                     </OverlayBtn>\r\n//                     <OverlayBtn onClick={goToBooking}>예약 하기</OverlayBtn>\r\n//                 </MouseHoverButton>\r\n//             </Overlay>\r\n//             <PosterImg src={movieThumbnailImageUrl} />\r\n//             <MovieInfoTextWrapper>\r\n//                 <MovieInfoTitle>{movieName}</MovieInfoTitle>\r\n//                 <MovieInfoText>{movieNameInEnglish}</MovieInfoText>\r\n//             </MovieInfoTextWrapper>\r\n//         </SwiperCardContainer>\r\n//     );\r\n// }\r\n// export default SwiperCard;\r\n\r\n\r\n// const fadeIn = keyframes`\r\n//   0% {\r\n//     opacity: 0;\r\n//   }\r\n//   100% {\r\n//     opacity: 1;\r\n//   }\r\n// `;\r\n\r\n// const SwiperCardContainer = styled.div`\r\n//   position: relative;\r\n// `;\r\n\r\n// const Overlay = styled.div`\r\n//   display: ${props => (props.isMouseHover ? 'block' : 'none')};\r\n//   position: absolute;\r\n//   width: 300px;\r\n//   height: 430px;\r\n//   border-radius: 10px;\r\n//   background: rgba(112, 99, 255, 0.3);\r\n//   backdrop-filter: blur(20px);\r\n//   animation: ${fadeIn} 0.1s ease-out;\r\n//   z-index: 100;\r\n// `;\r\n\r\n// const OverlayText = styled.p`\r\n//   width: 230px;\r\n//   margin: auto;\r\n//   margin-top: 100px;\r\n//   font-weight: 400;\r\n//   text-align: center;\r\n//   color: white;\r\n//   font-size: 18px;\r\n//   line-height: 25px;\r\n// `;\r\n\r\n// const OverlayBtn = styled.button`\r\n//   width: 150px;\r\n//   height: 50px;\r\n//   margin-top: 30px;\r\n//   border: 0px;\r\n//   border-radius: 10px;\r\n//   background: #7063ff;\r\n//   color: white;\r\n//   font-size: 20px;\r\n//   font-weight: 400;\r\n//   cursor: pointer;\r\n\r\n//   &:hover {\r\n//     background: white;\r\n//     color: #7063ff;\r\n//     box-shadow: 1.8px 3.7px 8px #767676;\r\n//   }\r\n// `;\r\n\r\n// const PosterImg = styled.img`\r\n//   width: 100%;\r\n// `;\r\n\r\n// const MovieInfoTextWrapper = styled.div`\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   margin-top: 30px;\r\n// `;\r\n\r\n// const MovieInfoTitle = styled.h3`\r\n//   font-weight: 700;\r\n//   font-size: 20px;\r\n// `;\r\n\r\n// const MovieInfoText = styled.span`\r\n//   margin-top: 10px;\r\n//   font-size: 15px;\r\n//   color: gray;\r\n// `;\r\n// const MouseHoverButton = styled.div`\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   margin-left: 75px;\r\n// `;\r\n"],"mappings":"AAAA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}