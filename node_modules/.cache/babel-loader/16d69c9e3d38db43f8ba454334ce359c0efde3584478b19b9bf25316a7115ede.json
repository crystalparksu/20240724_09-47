{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\frontend_rock\\\\src\\\\pages\\\\Notice\\\\NoticeWrite.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios';\nimport './css/NoticeWrite.css';\nimport styled from \"styled-components\";\n\n//공지사항 글쓰기\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NoticeWrite() {\n  _s();\n  //변수\n  const [boardTitle, setBoardTitle] = useState('');\n  const [boardContent, setBoardContent] = useState('');\n  const [fileInputs, setFileInputs] = useState([0]); // 파일 입력 상태\n  const [files, setFiles] = useState([]);\n  const navigate = useNavigate();\n\n  //핸들러\n  const handleTitleChange = e => {\n    setBoardTitle(e.target.value);\n  };\n  const handleContentChange = e => {\n    setBoardContent(e.target.value);\n  };\n  const handleFileChange = (index, e) => {\n    const newFiles = [...files];\n    newFiles[index] = e.target.files[0];\n    setFiles(newFiles);\n  };\n  const addFileInput = () => {\n    if (fileInputs.length >= 5) {\n      alert(\"최대 5개의 파일만 업로드할 수 있습니다.\");\n      return;\n    }\n    setFileInputs([...fileInputs, fileInputs.length]);\n  };\n  const removeFileInput = index => {\n    const newFileInputs = fileInputs.filter((_, i) => i !== index);\n    const newFiles = files.filter((_, i) => i !== index);\n    setFileInputs(newFileInputs);\n    setFiles(newFiles);\n  };\n\n  //handleSubmit\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = {\n      boardTitle: boardTitle,\n      boardContent: boardContent\n    };\n\n    //비동기\n    try {\n      const response = await axios.post('/admin/boardWrite', data);\n      console.log('게시글 작성 성공:', response);\n      const boardId = response.data.boardId; // 서버에서 반환한 게시글 ID\n\n      if (files.length > 0) {\n        await uploadFiles(boardId, files);\n      } else {\n        navigate('/admin/Notice');\n      }\n    } catch (error) {\n      console.error('게시글 작성 실패:', error);\n      alert('게시글 작성에 실패했습니다.');\n    }\n  };\n\n  //uploadFiles\n  const uploadFiles = async (boardId, files) => {\n    const formData = new FormData();\n    files.forEach(file => {\n      if (file) {\n        formData.append('files', file); // 'files'는 서버에서 기대하는 파라미터 이름\n      }\n    });\n    try {\n      await axios.post(`/admin/boardUpload/${boardId}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('파일 업로드 성공');\n      navigate('/admin/Notice');\n    } catch (error) {\n      console.error('파일 업로드 실패:', error.response ? error.response.data : error.message);\n      alert('파일 업로드에 실패했습니다. 게시글은 작성되었습니다.');\n      navigate('/admin/Notice');\n    }\n  };\n\n  //HTML\n  return /*#__PURE__*/_jsxDEV(Wrap, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uACF5\\uC9C0\\uC0AC\\uD56D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NoticeWrite\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"writeForm\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"WritetTitle\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            name: \"title\",\n            required: true,\n            placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n            value: boardTitle,\n            onChange: handleTitleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"WriteText\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"content\",\n            id: \"content\",\n            cols: \"40\",\n            rows: \"10\",\n            required: true,\n            value: boardContent,\n            onChange: handleContentChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), fileInputs.map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FileUpload\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: `file_${index}`,\n            name: `file_${index}`,\n            onChange: e => handleFileChange(index, e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => removeFileInput(index),\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 56\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"AddFileUpload\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: addFileInput,\n            children: \"\\uD30C\\uC77C \\uCD94\\uAC00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"WriteSubmit\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"\\uAE00\\uC4F0\\uAE30\",\n            className: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n_s(NoticeWrite, \"b1rIFnKRoRjHCQ7RROVHhY3ii4I=\", false, function () {\n  return [useNavigate];\n});\n_c = NoticeWrite;\nexport default NoticeWrite;\nconst Wrap = styled.div`\n    width: 100% ;\n    height: 100vh;\n    position: relative;\n    margin: 0 auto;\n    //padding: 40px 40px;\n    //background: rgb(255,255,255);\n    background: #fff;\n    display: inline-block;\n`;\n\n// 제목\n_c2 = Wrap;\nconst Header = styled.h2`\n    width: 1024px;\n    margin: 0 auto;\n    display: flex;\n    justify-content: left;\n    margin-left: 10%;\n    font-family: 'SUIT-Regular' !important;\n    color: rgb(51, 61, 75);\n    font-size: 36px;\n    font-weight: 800;\n    text-align: left;\n    width: 1044px;\n    margin-bottom: 48px;\n    padding-top: 74px;\n`;\n_c3 = Header;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"NoticeWrite\");\n$RefreshReg$(_c2, \"Wrap\");\n$RefreshReg$(_c3, \"Header\");","map":{"version":3,"names":["React","useState","useNavigate","axios","styled","jsxDEV","_jsxDEV","NoticeWrite","_s","boardTitle","setBoardTitle","boardContent","setBoardContent","fileInputs","setFileInputs","files","setFiles","navigate","handleTitleChange","e","target","value","handleContentChange","handleFileChange","index","newFiles","addFileInput","length","alert","removeFileInput","newFileInputs","filter","_","i","handleSubmit","preventDefault","data","response","post","console","log","boardId","uploadFiles","error","formData","FormData","forEach","file","append","headers","message","Wrap","children","Header","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","id","name","required","placeholder","onChange","cols","rows","map","input","onClick","_c","div","_c2","h2","_c3","$RefreshReg$"],"sources":["C:/Users/Administrator/frontend_rock/src/pages/Notice/NoticeWrite.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport './css/NoticeWrite.css';\r\nimport styled from \"styled-components\";\r\n\r\n\r\n\r\n//공지사항 글쓰기\r\nfunction NoticeWrite() {\r\n\r\n    //변수\r\n    const [boardTitle, setBoardTitle] = useState('');\r\n    const [boardContent, setBoardContent] = useState('');\r\n    const [fileInputs, setFileInputs] = useState([0]); // 파일 입력 상태\r\n    const [files, setFiles] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    //핸들러\r\n    const handleTitleChange = (e) => {\r\n        setBoardTitle(e.target.value);\r\n    };\r\n\r\n    const handleContentChange = (e) => {\r\n        setBoardContent(e.target.value);\r\n    };\r\n\r\n    const handleFileChange = (index, e) => {\r\n        const newFiles = [...files];\r\n        newFiles[index] = e.target.files[0];\r\n        setFiles(newFiles);\r\n    };\r\n\r\n    const addFileInput = () => {\r\n        if (fileInputs.length >= 5) {\r\n            alert(\"최대 5개의 파일만 업로드할 수 있습니다.\");\r\n            return;\r\n        }\r\n        setFileInputs([...fileInputs, fileInputs.length]);\r\n    };\r\n\r\n    const removeFileInput = (index) => {\r\n        const newFileInputs = fileInputs.filter((_, i) => i !== index);\r\n        const newFiles = files.filter((_, i) => i !== index);\r\n        setFileInputs(newFileInputs);\r\n        setFiles(newFiles);\r\n    };\r\n\r\n\r\n    //handleSubmit\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            boardTitle: boardTitle, boardContent: boardContent,\r\n        };\r\n\r\n        //비동기\r\n        try {\r\n            const response = await axios.post('/admin/boardWrite', data);\r\n            console.log('게시글 작성 성공:', response);\r\n            const boardId = response.data.boardId; // 서버에서 반환한 게시글 ID\r\n\r\n            if (files.length > 0) {\r\n                await uploadFiles(boardId, files);\r\n            } else {\r\n                navigate('/admin/Notice');\r\n            }\r\n        } catch (error) {\r\n            console.error('게시글 작성 실패:', error);\r\n            alert('게시글 작성에 실패했습니다.');\r\n        }\r\n    };\r\n\r\n\r\n    //uploadFiles\r\n    const uploadFiles = async (boardId, files) => {\r\n        const formData = new FormData();\r\n        files.forEach((file) => {\r\n            if (file) {\r\n                formData.append('files', file); // 'files'는 서버에서 기대하는 파라미터 이름\r\n            }\r\n        });\r\n\r\n        try {\r\n            await axios.post(`/admin/boardUpload/${boardId}`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            });\r\n            console.log('파일 업로드 성공');\r\n            navigate('/admin/Notice');\r\n        } catch (error) {\r\n            console.error('파일 업로드 실패:', error.response ? error.response.data : error.message);\r\n            alert('파일 업로드에 실패했습니다. 게시글은 작성되었습니다.');\r\n            navigate('/admin/Notice');\r\n        }\r\n    };\r\n\r\n\r\n\r\n    //HTML\r\n    return(\r\n\r\n        <Wrap>\r\n            <Header>\r\n                {/* 주제목*/}\r\n                <h2>공지사항</h2>\r\n            </Header>\r\n\r\n            <div className=\"NoticeWrite\">\r\n                <form className=\"writeForm\"\r\n                      onSubmit={handleSubmit}>\r\n\r\n\r\n\r\n                    {/* 제목 */}\r\n                    <div className=\"WritetTitle\">\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"title\"\r\n                            name=\"title\"\r\n                            required\r\n                            placeholder=\"제목을 입력하세요\"\r\n                            value={boardTitle}\r\n                            onChange={handleTitleChange}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* 내용 */}\r\n                    <div className=\"WriteText\">\r\n                    <textarea\r\n                        name=\"content\"\r\n                        id=\"content\"\r\n                        cols=\"40\"\r\n                        rows=\"10\"\r\n                        required\r\n                        value={boardContent}\r\n                        onChange={handleContentChange}\r\n                    ></textarea>\r\n                    </div>\r\n\r\n\r\n                    {/* 첨부파일 버튼 */}\r\n                    {fileInputs.map((input, index) => (<div className=\"FileUpload\" key={index}>\r\n                            <input\r\n                                type=\"file\"\r\n                                id={`file_${index}`}\r\n                                name={`file_${index}`}\r\n                                onChange={(e) => handleFileChange(index, e)}\r\n                            />\r\n                            <button type=\"button\" onClick={() => removeFileInput(index)}>삭제</button>\r\n                        </div>))}\r\n\r\n\r\n                    {/* 추가 파일 업로드 버튼 */}\r\n                    <div className=\"AddFileUpload\">\r\n                        <button type=\"button\" onClick={addFileInput}>파일 추가</button>\r\n                    </div>\r\n\r\n\r\n                    {/* 글쓰기 버튼 */}\r\n                    <div className=\"WriteSubmit\">\r\n                        <input type=\"submit\" value=\"글쓰기\" className=\"submit\"/>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        </Wrap>);\r\n}\r\n\r\nexport default NoticeWrite;\r\n\r\nconst Wrap = styled.div`\r\n    width: 100% ;\r\n    height: 100vh;\r\n    position: relative;\r\n    margin: 0 auto;\r\n    //padding: 40px 40px;\r\n    //background: rgb(255,255,255);\r\n    background: #fff;\r\n    display: inline-block;\r\n`;\r\n\r\n// 제목\r\nconst Header = styled.h2`\r\n    width: 1024px;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    justify-content: left;\r\n    margin-left: 10%;\r\n    font-family: 'SUIT-Regular' !important;\r\n    color: rgb(51, 61, 75);\r\n    font-size: 36px;\r\n    font-weight: 800;\r\n    text-align: left;\r\n    width: 1044px;\r\n    margin-bottom: 48px;\r\n    padding-top: 74px;\r\n`;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}