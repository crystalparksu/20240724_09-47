{"ast":null,"code":"// import React from \"react\";\n// import styled from \"styled-components\";\n// import { useEffect, useState } from \"react\";\n// import { useLocation, useNavigate } from \"react-router-dom\";\n// // import { getAuth, GoogleAuthProvider, onAuthStateChanged, signInWithPopup, signOut } from \"firebase/auth\";\n//\n//\n// import { Link } from 'react-router-dom';\n// import logo from './images/rock_w_logo.svg';\n// import * as PropTypes from \"prop-types\";\n//\n//\n//\n//\n// // Nav ==================\n// const Nav = () => {\n//\n//     const initialUserData = localStorage.getItem(\"userData\") ? JSON.parse(localStorage.getItem(\"userData\")) : {};\n//     const [show, setShow] = useState(false);\n//     const { pathname } = useLocation();\n//     const navigate = useNavigate();\n//\n//     const [searchValue, setSearchValue] = useState(\"\");\n//\n//     const [userData, setUserData] = useState(initialUserData);\n//\n//\n//     // useEffect(() => {\n//     //     onAuthStateChanged(auth, (user) => {\n//     //         if (!user) {\n//     //             navigate(\"/\");\n//     //         } else if (user && pathname === \"/\") {\n//     //             navigate(\"/main\");\n//     //         }\n//     //     });\n//     // }, [auth, navigate, pathname]);\n//\n//\n//     // const handleAuth = () => {\n//     //     signInWithPopup(auth, provider)\n//     //         .then((result) => {\n//     //             console.log(result);\n//     //             setUserData(result.user);\n//     //             localStorage.setItem(\"userData\", JSON.stringify(result.user));\n//     //         })\n//     //         .catch((error) => {\n//     //             console.log(error);\n//     //         });\n//     // };\n//\n//\n//\n//     const listener = () => {\n//         if (window.scrollY > 50) {\n//             setShow(true);\n//         } else {\n//             setShow(false);\n//         }\n//     };\n//\n//\n//     useEffect(() => {\n//         window.addEventListener(\"scroll\", listener);\n//         return () => {\n//             window.removeEventListener(\"scroll\", listener);\n//         };\n//     }, []);\n//\n//\n//     const handleChange = (e) => {\n//         setSearchValue(e.target.value);\n//         navigate(`/search?q=${e.target.value}`);\n//     };\n//\n//     // const handleLogOut = () => {\n//     //     signOut(auth)\n//     //         .then(() => {\n//     //             setUserData();\n//     //         })\n//     //         .catch((error) => {\n//     //             alert(error.message);\n//     //         });\n//     // };\n//\n//     return (\n//         <NavWrapper show={show}>\n//             <Logo>\n//                 <img alt=\"logo\" src={logo} onClick={() => (window.location.href = \"/\")}/>}\n//             </Logo>\n//\n//             {pathname === \"/\" ? (\n//                 <Login onClick=\"\">Login</Login>\n//             ) : (\n//                 <>\n//                     <Input onChange={handleChange} />\n//                     <SignOut>\n//                         <UserImg src={userData.photoURL} alt={userData.displayName} />\n//                         <DropDown>\n//                             <span onClick=\"\">Sign out</span>\n//                         </DropDown>\n//                     </SignOut>\n//                 </>\n//             )}\n//         </NavWrapper>\n//     );\n// };\n//\n//\n// //=================================\n// const Navigators = styled.div`\n//   display: flex;\n//   justify-content: space-between;\n//   width: 350px;\n//   font-size: 23px;\n//\n//   .fa-user {\n//     color: ${props => props.theme.lightgreen};\n//   }\n// `;\n//\n// const NavElements = styled.div`\n//   cursor: pointer;\n// `;\n//\n//\n// //상단 네비바 - 전체\n// const NavWrapper = styled.nav`\n//     position: fixed;\n//     top: 0;\n//     left: 0;\n//     right: 0;\n//     width: 100vw;\n//     max-height: 60px;\n//     z-index: 999;\n//     overflow: hidden;\n//     user-select: none;\n//\n//     //background-color: rgba(22, 22, 23, .8);\n//\n//     //background:rgba(4,7,20,0.5);\n//    // background:rgba(0,0,0,0.2);\n//     //backdrop-filter: blur(10px);\n//     backdrop-filter: saturate(180%) blur(20px);\n//     background: rgba(22, 22, 23, 0.8);\n//\n//     //border-bottom: 1px solid rgba(4,7,20,0.5);\n//     transition: background-color 0.5s ease 0s, max-height 0.5s ease 0s;\n//     padding: 0 36px;\n//     box-sizing: border-box;\n//     display: flex;\n//     justify-content: space-between;\n//     align-items: center;\n//\n//\n//   //position: fixed;\n//   //top: 0;\n//\n//   //height: 70px;\n//   //  background-color: rgb(11, 11, 13) !important;\n//   //  border-top: 1px solid rgb(25, 31, 40);\n//\n//\n//   //letter-spacing: 16px;\n//   //z-index: 3;\n// `;\n//\n//\n//\n// const DropDown = styled.div`\n//   position: absolute;\n//   top: 48px;\n//   right: 0px;\n//   background: rgb(19, 19, 19);\n//   border: 1px solid rgba(151, 151, 151, 0.34);\n//   border-radius: 4px;\n//   padding: 10px;\n//   font-size: 14px;\n//   letter-spacing: 3px;\n//   width: 100px;\n//   opacity: 0;\n// `;\n//\n// const SignOut = styled.div`\n//   position: relative;\n//   height: 48px;\n//   width: 48px;\n//   display: flex;\n//   cursor: pointer;\n//   align-items: center;\n//   justify-content: center;\n//\n//   &:hover {\n//     ${DropDown} {\n//       opacity: 1;\n//       transition-duration: 1s;\n//     }\n//   }\n// `;\n//\n// const UserImg = styled.img`\n//   height: 100%;\n//   border-radius: 50%;\n// `;\n//\n//\n// //오른쪽 - 로그인 버튼\n// const Login = styled.a`\n//     //background-color: #02d6e8;\n//     //background-color: #fda4a4;\n//     border: 2px solid #fff;\n//     border-radius: 4px;\n//     color: #fff;\n//     font-weight: 600;\n//     letter-spacing: 1.5px;\n//     //background-color: rgba(0, 0, 0, 0.6);\n//     padding: 8px 16px;\n//     text-transform: uppercase;\n//     //border: 1px solid #f9f9f9;\n//     transition: all 0.2s ease 0s;\n//\n//     //호버시\n//     &:hover {\n//         background-color: #f9f9f9;\n//         color: #000;\n//         font-weight: 900;\n//         //border-color: transparent;\n//     }\n// `;\n//\n// const Input = styled.input`\n//   position: fixed;\n//   left: 50%;\n//   transform: translate(-50%, 0);\n//   background-color: rgba(0, 0, 0, 0.582);\n//   border-radius: 5px;\n//   color: white;\n//   padding: 5px;\n//   border: 1px solid lightgray;\n// `;\n//\n//\n// const Logo = styled.a`\n//   padding: 0;\n//   width: 100%;\n//   margin-top: 20px;\n//   //max-height: 70px;\n//   //font-size: 0;\n//   display: inline-block;\n//     //로고 이미지\n//   img {\n//       position: relative;\n//       display: flex;\n//       width: 140px;\n//       height: 140px;\n//       margin: auto 0;\n//       transition: opacity 0.5s ease 0s;\n//       padding-bottom: 20px;\n//   }\n// `;\n//\n// export default Nav","map":{"version":3,"names":[],"sources":["C:/Users/Administrator/frontend_rock/src/components/Nav/Nav__.jsx"],"sourcesContent":["// import React from \"react\";\r\n// import styled from \"styled-components\";\r\n// import { useEffect, useState } from \"react\";\r\n// import { useLocation, useNavigate } from \"react-router-dom\";\r\n// // import { getAuth, GoogleAuthProvider, onAuthStateChanged, signInWithPopup, signOut } from \"firebase/auth\";\r\n//\r\n//\r\n// import { Link } from 'react-router-dom';\r\n// import logo from './images/rock_w_logo.svg';\r\n// import * as PropTypes from \"prop-types\";\r\n//\r\n//\r\n//\r\n//\r\n// // Nav ==================\r\n// const Nav = () => {\r\n//\r\n//     const initialUserData = localStorage.getItem(\"userData\") ? JSON.parse(localStorage.getItem(\"userData\")) : {};\r\n//     const [show, setShow] = useState(false);\r\n//     const { pathname } = useLocation();\r\n//     const navigate = useNavigate();\r\n//\r\n//     const [searchValue, setSearchValue] = useState(\"\");\r\n//\r\n//     const [userData, setUserData] = useState(initialUserData);\r\n//\r\n//\r\n//     // useEffect(() => {\r\n//     //     onAuthStateChanged(auth, (user) => {\r\n//     //         if (!user) {\r\n//     //             navigate(\"/\");\r\n//     //         } else if (user && pathname === \"/\") {\r\n//     //             navigate(\"/main\");\r\n//     //         }\r\n//     //     });\r\n//     // }, [auth, navigate, pathname]);\r\n//\r\n//\r\n//     // const handleAuth = () => {\r\n//     //     signInWithPopup(auth, provider)\r\n//     //         .then((result) => {\r\n//     //             console.log(result);\r\n//     //             setUserData(result.user);\r\n//     //             localStorage.setItem(\"userData\", JSON.stringify(result.user));\r\n//     //         })\r\n//     //         .catch((error) => {\r\n//     //             console.log(error);\r\n//     //         });\r\n//     // };\r\n//\r\n//\r\n//\r\n//     const listener = () => {\r\n//         if (window.scrollY > 50) {\r\n//             setShow(true);\r\n//         } else {\r\n//             setShow(false);\r\n//         }\r\n//     };\r\n//\r\n//\r\n//     useEffect(() => {\r\n//         window.addEventListener(\"scroll\", listener);\r\n//         return () => {\r\n//             window.removeEventListener(\"scroll\", listener);\r\n//         };\r\n//     }, []);\r\n//\r\n//\r\n//     const handleChange = (e) => {\r\n//         setSearchValue(e.target.value);\r\n//         navigate(`/search?q=${e.target.value}`);\r\n//     };\r\n//\r\n//     // const handleLogOut = () => {\r\n//     //     signOut(auth)\r\n//     //         .then(() => {\r\n//     //             setUserData();\r\n//     //         })\r\n//     //         .catch((error) => {\r\n//     //             alert(error.message);\r\n//     //         });\r\n//     // };\r\n//\r\n//     return (\r\n//         <NavWrapper show={show}>\r\n//             <Logo>\r\n//                 <img alt=\"logo\" src={logo} onClick={() => (window.location.href = \"/\")}/>}\r\n//             </Logo>\r\n//\r\n//             {pathname === \"/\" ? (\r\n//                 <Login onClick=\"\">Login</Login>\r\n//             ) : (\r\n//                 <>\r\n//                     <Input onChange={handleChange} />\r\n//                     <SignOut>\r\n//                         <UserImg src={userData.photoURL} alt={userData.displayName} />\r\n//                         <DropDown>\r\n//                             <span onClick=\"\">Sign out</span>\r\n//                         </DropDown>\r\n//                     </SignOut>\r\n//                 </>\r\n//             )}\r\n//         </NavWrapper>\r\n//     );\r\n// };\r\n//\r\n//\r\n// //=================================\r\n// const Navigators = styled.div`\r\n//   display: flex;\r\n//   justify-content: space-between;\r\n//   width: 350px;\r\n//   font-size: 23px;\r\n//\r\n//   .fa-user {\r\n//     color: ${props => props.theme.lightgreen};\r\n//   }\r\n// `;\r\n//\r\n// const NavElements = styled.div`\r\n//   cursor: pointer;\r\n// `;\r\n//\r\n//\r\n// //상단 네비바 - 전체\r\n// const NavWrapper = styled.nav`\r\n//     position: fixed;\r\n//     top: 0;\r\n//     left: 0;\r\n//     right: 0;\r\n//     width: 100vw;\r\n//     max-height: 60px;\r\n//     z-index: 999;\r\n//     overflow: hidden;\r\n//     user-select: none;\r\n//\r\n//     //background-color: rgba(22, 22, 23, .8);\r\n//\r\n//     //background:rgba(4,7,20,0.5);\r\n//    // background:rgba(0,0,0,0.2);\r\n//     //backdrop-filter: blur(10px);\r\n//     backdrop-filter: saturate(180%) blur(20px);\r\n//     background: rgba(22, 22, 23, 0.8);\r\n//\r\n//     //border-bottom: 1px solid rgba(4,7,20,0.5);\r\n//     transition: background-color 0.5s ease 0s, max-height 0.5s ease 0s;\r\n//     padding: 0 36px;\r\n//     box-sizing: border-box;\r\n//     display: flex;\r\n//     justify-content: space-between;\r\n//     align-items: center;\r\n//\r\n//\r\n//   //position: fixed;\r\n//   //top: 0;\r\n//\r\n//   //height: 70px;\r\n//   //  background-color: rgb(11, 11, 13) !important;\r\n//   //  border-top: 1px solid rgb(25, 31, 40);\r\n//\r\n//\r\n//   //letter-spacing: 16px;\r\n//   //z-index: 3;\r\n// `;\r\n//\r\n//\r\n//\r\n// const DropDown = styled.div`\r\n//   position: absolute;\r\n//   top: 48px;\r\n//   right: 0px;\r\n//   background: rgb(19, 19, 19);\r\n//   border: 1px solid rgba(151, 151, 151, 0.34);\r\n//   border-radius: 4px;\r\n//   padding: 10px;\r\n//   font-size: 14px;\r\n//   letter-spacing: 3px;\r\n//   width: 100px;\r\n//   opacity: 0;\r\n// `;\r\n//\r\n// const SignOut = styled.div`\r\n//   position: relative;\r\n//   height: 48px;\r\n//   width: 48px;\r\n//   display: flex;\r\n//   cursor: pointer;\r\n//   align-items: center;\r\n//   justify-content: center;\r\n//\r\n//   &:hover {\r\n//     ${DropDown} {\r\n//       opacity: 1;\r\n//       transition-duration: 1s;\r\n//     }\r\n//   }\r\n// `;\r\n//\r\n// const UserImg = styled.img`\r\n//   height: 100%;\r\n//   border-radius: 50%;\r\n// `;\r\n//\r\n//\r\n// //오른쪽 - 로그인 버튼\r\n// const Login = styled.a`\r\n//     //background-color: #02d6e8;\r\n//     //background-color: #fda4a4;\r\n//     border: 2px solid #fff;\r\n//     border-radius: 4px;\r\n//     color: #fff;\r\n//     font-weight: 600;\r\n//     letter-spacing: 1.5px;\r\n//     //background-color: rgba(0, 0, 0, 0.6);\r\n//     padding: 8px 16px;\r\n//     text-transform: uppercase;\r\n//     //border: 1px solid #f9f9f9;\r\n//     transition: all 0.2s ease 0s;\r\n//\r\n//     //호버시\r\n//     &:hover {\r\n//         background-color: #f9f9f9;\r\n//         color: #000;\r\n//         font-weight: 900;\r\n//         //border-color: transparent;\r\n//     }\r\n// `;\r\n//\r\n// const Input = styled.input`\r\n//   position: fixed;\r\n//   left: 50%;\r\n//   transform: translate(-50%, 0);\r\n//   background-color: rgba(0, 0, 0, 0.582);\r\n//   border-radius: 5px;\r\n//   color: white;\r\n//   padding: 5px;\r\n//   border: 1px solid lightgray;\r\n// `;\r\n//\r\n//\r\n// const Logo = styled.a`\r\n//   padding: 0;\r\n//   width: 100%;\r\n//   margin-top: 20px;\r\n//   //max-height: 70px;\r\n//   //font-size: 0;\r\n//   display: inline-block;\r\n//     //로고 이미지\r\n//   img {\r\n//       position: relative;\r\n//       display: flex;\r\n//       width: 140px;\r\n//       height: 140px;\r\n//       margin: auto 0;\r\n//       transition: opacity 0.5s ease 0s;\r\n//       padding-bottom: 20px;\r\n//   }\r\n// `;\r\n//\r\n// export default Nav"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}